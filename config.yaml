options:
  apt-key-server:
    description: APT Key Server
    type: string
    default: 'hkp://keyserver.ubuntu.com:80'
  docker-opts:
    type: string
    default : ""
    description: |
      Docker daemon command line arguments that are passed to `dockerd` when
      it starts, e.g. `--insecure-registry`.

      Prefer to use `daemon-opts` instead of this. See the `daemon-opts`
      description for more info.
  daemon-opts:
    type: string
    default: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "100"
        }
      }
    description: |
      Docker daemon configuration options, in json format, which are written
      directly to `/etc/docker/daemon.json`.

      Prefer to use this instead of `docker-opts`. While the two can
      be used together, care should be taken to not specify the same option
      in both places. Doing so will cause the Docker daemon to exit with an
      error.

      More info about available options can be found at
      https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file
  enable-cgroups:
    type: boolean
    default: false
    description: |
       Enable GRUB cgroup overrides cgroup_enable=memory swapaccount=1. WARNING
       changing this option will reboot the host - use with caution on production
       services.
  install_from_upstream:
    type: boolean
    default: false
    description: |
      Toggle installation from Ubuntu archive vs the Docker PPA (DEPRECATED; please use docker_runtime instead).
  docker_runtime:
    type: string
    default: "auto"
    description: |
      Docker runtime to install valid values are "upstream" (Docker PPA), "nvidia" (Nvidia PPA),
      "apt" (Ubuntu archive), "auto" (Nvidia PPA or Ubuntu archive, based on your hardware),
      or "custom" (must have set `docker_runtime_repo` URL, `docker_runtime_key_url` URL and
      `docker_runtime_package` name).
  docker_runtime_repo:
    type: string
    default: ""
    description: |
      Custom Docker repository, given in deb format.  Use `{ARCH}` to determine architecture at
      runtime.  Use `{CODE}` to set release codename.  E.g.
      `deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable`.
  docker_runtime_key_url:
    type: string
    default: ""
    description: |
      Custom Docker repository validation key URL.
  docker_runtime_package:
    type: string
    default: ""
    description: |
      Custom Docker repository package name.
  cuda_repo:
    type: string
    default: "10.0.130-1"
    description: |
      The cuda-repo package version to install.
  nvidia-docker-package:
    type: string
    default: "nvidia-docker2=2.0.3+docker18.09.1-1"
    description: |
      The pinned version of nvidia-docker2 package.
  nvidia-container-runtime-package:
    type: string
    default: "nvidia-container-runtime=2.0.0+docker18.09.1-1"
    description: |
      The pinned version of nvidia-container-runtime package.
  docker-ce-package:
    type: string
    default: "docker-ce=5:18.09.1~3-0~ubuntu-bionic"
    description: |
      The pinned version of docker-ce package installed with nvidia-docker.
  http_proxy:
     type: string
     default: ""
     description: |
        URL to use for HTTP_PROXY to be used by Docker. Useful in
        egress-filtered environments where a proxy is the only option for
        accessing the registry to pull images.
  https_proxy:
    type: string
    default: ""
    description: |
        URL to use for HTTPS_PROXY to be used by Docker. Useful in
        egress-filtered environments where a proxy is the only option for
        accessing the registry to pull images.
  no_proxy:
    type: string
    default: ""
    description: |
        Comma-separated list of destinations (either domain names or IP
        addresses) which should be accessed directly, rather than through
        the proxy defined in http_proxy or https_proxy. Must be less than
        2023 characters long.
